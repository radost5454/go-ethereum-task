name: Deploy Contracts to Devnet

on:
  # pull_request:
  #   types: [closed]
  workflow_dispatch:

jobs:
  deploy_contracts:
    runs-on: ubuntu-latest
    outputs:
      contract_address: ${{ steps.extract_address.outputs.contract_address }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Geth devnet container
        run: |
          echo "Starting Geth devnet container..."
          docker run -d --name geth-devnet -p 8545:8545 \
            ghcr.io/${{ github.repository_owner }}/go-ethereum:dev-latest \
            geth \
              --dev \
              --dev.period 1 \
              --datadir /tmp/devdatadir \
              --http --http.addr 0.0.0.0 --http.port 8545 \
              --http.api eth,net,web3,personal \
              --allow-insecure-unlock

      - name: Wait for Geth RPC
        run: |
          echo "‚åõ Waiting for Geth RPC..."
          for i in {1..10}; do
            if curl -s http://localhost:8545 >/dev/null; then
              echo "‚úÖ Geth RPC is up!"
              break
            fi
            sleep 3
          done

      - name: Install Hardhat dependencies
        working-directory: hardhat
        run: npm install

      - name: Compile contracts
        working-directory: hardhat
        run: npx hardhat compile

      - name: Fund deployer
        run: |
          docker exec geth-devnet geth --exec "eth.sendTransaction({
            from: eth.accounts[0],
            to: '0xe260c22167D6e68FDc9d465C3751c1224a3962D3',
            value: web3.toWei(100, 'ether')
          })" attach http://localhost:8545
          sleep 5

      - name: Deploy contracts using Ignition
        working-directory: hardhat
        env:
          HARDHAT_DEPLOYER_KEY: "0x59c6995e998f97a5a004497e5da0da3eb20c29e0cde8c3c2d20c3eab366d8e84"
        run: |
          echo "yes" | npx hardhat ignition deploy ./ignition/modules/Lock.js --network geth --verbose | tee deploy.log

      - name: Extract contract address
        id: extract_address
        working-directory: hardhat
        run: |
          ADDRESS=$(grep -oE 'LockModule#Lock - 0x[a-fA-F0-9]{40}' deploy.log | grep -oE '0x[a-fA-F0-9]{40}' | head -1)
          echo "‚úÖ Extracted address: $ADDRESS"
          echo "contract_address=$ADDRESS" >> $GITHUB_OUTPUT

      - name: Commit container to new image
        run: |
          docker commit geth-devnet ghcr.io/${{ github.repository_owner }}/go-ethereum:devnet-with-contracts

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image with contracts
        run: docker push ghcr.io/${{ github.repository_owner }}/go-ethereum:devnet-with-contracts

  run_tests_against_deployed:
    needs: deploy_contracts
    runs-on: ubuntu-latest
    env:
      CONTRACT_ADDRESS: ${{ needs.deploy_contracts.outputs.contract_address }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull committed image
        run: docker pull ghcr.io/${{ github.repository_owner }}/go-ethereum:devnet-with-contracts

      - name: Start geth from committed image
        run: |
          docker run -d --name geth-test -p 8545:8545 \
            ghcr.io/${{ github.repository_owner }}/go-ethereum:devnet-with-contracts \
            geth \
              --dev \
              --dev.period 1 \
              --datadir /tmp/devdatadir \
              --http --http.addr 0.0.0.0 --http.port 8545 \
              --http.api eth,net,web3,personal \
              --allow-insecure-unlock

      - name: Wait for Geth
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8545 >/dev/null; then
              echo "‚úÖ Geth is ready"
              break
            fi
            sleep 3
          done

      - name: Print contract address
        run: |
          echo "üîç CONTRACT_ADDRESS: $CONTRACT_ADDRESS"
          if [[ -z "$CONTRACT_ADDRESS" ]]; then
            echo "‚ùå CONTRACT_ADDRESS is empty"
            exit 1
          fi

      - name: Verify contract exists
        run: |
          echo "Checking if contract is deployed..."
          curl -s -X POST http://localhost:8545 \
            -H "Content-Type: application/json" \
            -d "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\":[\"$CONTRACT_ADDRESS\", \"latest\"],\"id\":1}"

      - name: Install Hardhat dependencies
        working-directory: hardhat
        run: npm install

      - name: Run Hardhat tests
        working-directory: hardhat
        env:
          CONTRACT_ADDRESS: ${{ needs.deploy_contracts.outputs.contract_address }}
        run: |
          echo "Running tests against $CONTRACT_ADDRESS"
          npx hardhat test test/deploy-verify-geth.js --network geth